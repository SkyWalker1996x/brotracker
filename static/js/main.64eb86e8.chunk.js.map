{"version":3,"sources":["store/types.ts","store/reducers/tasksReducer.ts","store/reducers/currentTaskReducer.ts","store/reducers/tabsReducer.ts","store/reducers/index.ts","store/reducers/activeTimerReducer.ts","store/reducers/emptyTaskWarningReducer.ts","store/sagas/activateTimerSaga.ts","store/actions/currentTaskActions.ts","store/actions/tasksActions.ts","store/sagas/inactivateTimerSaga.ts","store/sagas/index.ts","utils/localStorageUtils.ts","store/index.ts","store/actions/tabsActions.ts","UI/wrappers/ColumnWrapper/ColumnWrapper.tsx","components/Timer/TaskInput/TaskInput.tsx","UI/wrappers/CircleWrapper/CircleWrapper.tsx","utils/timesManipulationUtils.ts","components/Timer/TimerInfo/TimerInfo.tsx","components/Timer/TimerButton/mui-styles.ts","components/Timer/TimerButton/TimerButton.tsx","store/actions/activeTimerActions.ts","store/actions/emptyWarningActions.ts","components/Timer/Timer.tsx","components/Table/styles.ts","utils/taskManipulationUtils.ts","components/Table/FilledTable/FilledTable.tsx","components/Table/EmptyTable/mui-styles.ts","components/Table/EmptyTable/EmptyTable.tsx","components/Table/Table.tsx","components/Tabs/TabPanel/TabPanel.tsx","components/Tabs/styles.ts","utils/muiUtils.ts","components/TasksChart/GenerateTaskButton/mui-styles.ts","utils/generateTaskUtils.ts","components/TasksChart/GenerateTaskButton/GenerateTaskButton.tsx","UI/wrappers/GenerateTaskButtonWrapper/GenerateTaskButtonWrapper.tsx","components/TasksChart/TasksChart.tsx","components/Tabs/Tabs.tsx","components/EmptyTaskWarning/mui-styles.ts","components/EmptyTaskWarning/EmptyTaskWarning.tsx","pages/Main/Main.tsx","pages/TaskPage/mui-styles.ts","pages/NotFoundPage/NotFoundPage.tsx","pages/TaskPage/TaskPage.tsx","App.tsx","index.tsx"],"names":["ACTIVATE_TIMER","INACTIVATE_TIMER","SET_TASK_NAME","START_TASK","FINISH_TASK","CLEAR_CURRENT_TASK","UPDATE_TIME_SPEND","SHOW_WARNING","CLOSE_WARNING","ADD_TASK","DELETE_TASK","GENERATE_TASKS","initialState","id","taskName","timeStart","timeEnd","timeSpend","rootReducer","combineReducers","tasks","state","action","type","payload","filter","item","currentTask","activeTimer","activeTab","emptyTask","workerActivateTimer","watcherActivateTimer","getTimerActive","getTaskTimeStart","select","put","uuidv4","Date","now","timerActive","delay","takeEvery","workerInactivateTimer","watcherInactivateTimer","getCurrentTask","rootSaga","all","persistedState","serializedStore","localStorage","getItem","JSON","parse","e","console","log","loadFromLocalStorage","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","logger","subscribe","stringify","setItem","saveToLocalStorage","getState","run","dispatch","setActiveTab","tab","ColumnWrapper","children","className","mapDispatchToProps","setTaskName","name","connect","props","TextField","label","onChange","target","value","CircleWrapper","toDecimal","number","strNumber","toString","length","extractTime","dateInMS","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","extractSpendTime","timeInMS","Math","floor","useStyles","makeStyles","timerButton","color","indigo","background","fontWeight","activateTimer","inactivateTimer","showWarning","classes","inactivateListener","trim","listener","Button","variant","onClick","Timer","table","maxWidth","marginBottom","tableHeadCell","grey","tableRow","lightBlue","tableCell","tableButton","transformTasksForTable","map","task","index","toSentenceText","camelCase","result","replace","charAt","toUpperCase","slice","toPageInfo","tableHead","withRouter","history","useSelector","useDispatch","filledTable","TableRow","Object","keys","TableCell","align","push","deleteTask","TableContainer","Table","aria-label","TableHead","TableBody","message","marginTop","textAlign","EmptyTable","Typography","TimerTable","TabPanel","other","role","hidden","aria-labelledby","Box","tabs","backgroundColor","cyan","width","muiTabProps","generateButton","getRandomNumber","min","max","rand","random","GenerateTaskButton","randomTasks","randomNumbers","todayInMS","todayDate","getFullYear","getMonth","getDate","getTime","Array","from","substr","generateRandomTasks","GenerateTaskButtonWrapper","tasksToChart","timesChartData","spendMinutes","forEach","taskHourStart","taskMinutesStart","taskHourEnd","taskMinutesEnd","extractTimeChart","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","labelFormatter","fill","AppBar","position","Tabs","event","Tab","fullWidth","dialogTitle","pink","button","closeWarning","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Main","card","minWidth","borderColor","NotFoundPage","to","size","endIcon","TaskPage","pageTask","find","Card","CardContent","List","field","ListItem","ListItemText","primary","secondary","Divider","CardActions","App","exact","path","component","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.64eb86e8.chunk.js","sourcesContent":["// Active Timer\r\nexport const ACTIVATE_TIMER = 'ACTIVATE_TIMER';\r\nexport const INACTIVATE_TIMER = 'INACTIVATE_TIMER';\r\n// Current Task\r\nexport const SET_TASK_NAME = 'SET_TASK_NAME';\r\nexport const START_TASK = 'START_TASK';\r\nexport const FINISH_TASK = 'FINISH_TASK';\r\nexport const CLEAR_CURRENT_TASK = 'CLEAR_CURRENT_TASK';\r\nexport const UPDATE_TIME_SPEND = 'UPDATE_TIME_SPEND';\r\n// Empty Task Warning\r\nexport const SHOW_WARNING = 'SHOW_WARNING';\r\nexport const CLOSE_WARNING = 'CLOSE_WARNING';\r\n// Active Tab\r\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB';\r\n// Tasks\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const GENERATE_TASKS = 'GENERATE_TASKS';\r\n","import { ADD_TASK, DELETE_TASK, GENERATE_TASKS } from '../types';\r\nimport { Action, Tasks } from '../../interfaces/Store';\r\n\r\nconst initialState: Tasks = [];\r\n\r\nexport const tasksReducer = (state: Tasks = initialState, action: Action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [...state, payload];\r\n    case DELETE_TASK:\r\n      return [...state.filter((item) => item.id !== payload)];\r\n    case GENERATE_TASKS:\r\n      return [...payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CLEAR_CURRENT_TASK,\r\n  FINISH_TASK,\r\n  SET_TASK_NAME,\r\n  START_TASK,\r\n  UPDATE_TIME_SPEND,\r\n} from '../types';\r\nimport { Task, Action } from '../../interfaces/Store';\r\n\r\nconst initialState = {\r\n  id: '',\r\n  taskName: '',\r\n  timeStart: 0,\r\n  timeEnd: 0,\r\n  timeSpend: 0,\r\n};\r\n\r\nexport const currentTaskReducer = (\r\n  state: Task = initialState,\r\n  action: Action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_TASK_NAME:\r\n      return { ...state, taskName: payload };\r\n    case START_TASK:\r\n      return { ...state, ...payload };\r\n    case FINISH_TASK:\r\n      return {\r\n        ...state,\r\n        timeEnd: payload,\r\n        timeSpend: payload - state.timeStart,\r\n      };\r\n    case CLEAR_CURRENT_TASK:\r\n      return {\r\n        id: '',\r\n        taskName: '',\r\n        timeStart: 0,\r\n        timeEnd: 0,\r\n        timeSpend: 0,\r\n      };\r\n    case UPDATE_TIME_SPEND:\r\n      return {\r\n        ...state,\r\n        timeSpend: payload - state.timeStart,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Action, ActiveTab } from '../../interfaces/Store';\r\n\r\nconst initialState = 'TABLE_LOG';\r\n\r\nexport const tabsReducer = (\r\n  state: ActiveTab = initialState,\r\n  action: Action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'SET_ACTIVE_TAB':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { tasksReducer } from './tasksReducer';\r\nimport { currentTaskReducer } from './currentTaskReducer';\r\nimport { activeTimerReducer } from './activeTimerReducer';\r\nimport { tabsReducer } from './tabsReducer';\r\nimport { emptyTaskWarningReducer } from './emptyTaskWarningReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  currentTask: currentTaskReducer,\r\n  activeTimer: activeTimerReducer,\r\n  activeTab: tabsReducer,\r\n  emptyTask: emptyTaskWarningReducer,\r\n});\r\n","import { INACTIVATE_TIMER, ACTIVATE_TIMER } from '../types';\r\nimport { ActiveTimer, Action } from '../../interfaces/Store';\r\n\r\nconst initialState = false;\r\n\r\nexport const activeTimerReducer = (\r\n  state: ActiveTimer = initialState,\r\n  action: Action\r\n) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case ACTIVATE_TIMER:\r\n      return true;\r\n    case INACTIVATE_TIMER:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Action, EmptyTask } from '../../interfaces/Store';\r\nimport { CLOSE_WARNING, SHOW_WARNING } from '../types';\r\n\r\nconst initialState = false;\r\n\r\nexport const emptyTaskWarningReducer = (\r\n  state: EmptyTask = initialState,\r\n  action: Action\r\n) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case SHOW_WARNING:\r\n      return true;\r\n    case CLOSE_WARNING:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { delay, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIVATE_TIMER } from '../types';\r\nimport { startTask, updateTimeSpend } from '../actions/currentTaskActions';\r\nimport { State } from '../../interfaces/Store';\r\n\r\nconst getTimerActive = (state: State) => state.activeTimer;\r\nconst getTaskTimeStart = (state: State) => state.currentTask.timeStart;\r\n\r\nfunction* workerActivateTimer() {\r\n  const taskTimeStart = yield select(getTaskTimeStart);\r\n  if (taskTimeStart === 0) {\r\n    yield put(startTask());\r\n  }\r\n\r\n  while (true) {\r\n    const timerActive = yield select(getTimerActive);\r\n    if (timerActive) {\r\n      yield put(updateTimeSpend());\r\n    }\r\n    if (!timerActive) {\r\n      break;\r\n    }\r\n    yield delay(1000);\r\n  }\r\n}\r\n\r\nexport function* watcherActivateTimer() {\r\n  yield takeEvery(ACTIVATE_TIMER, workerActivateTimer);\r\n}\r\n","import {ClearCurrentTask, FinishTask, SetTaskName, StartTask, UpdateTimeSpend} from \"../../interfaces/Store\";\r\nimport {CLEAR_CURRENT_TASK, FINISH_TASK, SET_TASK_NAME, START_TASK, UPDATE_TIME_SPEND} from \"../types\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const setTaskName: SetTaskName = (name) => {\r\n    return {\r\n        type: SET_TASK_NAME,\r\n        payload: name,\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const startTask: StartTask = () => {\r\n    return {\r\n        type: START_TASK,\r\n        payload: {\r\n            id: uuidv4(),\r\n            timeStart: Date.now(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const finishTask: FinishTask = () => {\r\n    return {\r\n        type: FINISH_TASK,\r\n        payload: Date.now(),\r\n    };\r\n};\r\n\r\nexport const clearCurrentTask: ClearCurrentTask = () => {\r\n    return {\r\n        type: CLEAR_CURRENT_TASK,\r\n    };\r\n};\r\n\r\nexport const updateTimeSpend: UpdateTimeSpend = () => {\r\n    return {\r\n        type: UPDATE_TIME_SPEND,\r\n        payload: Date.now(),\r\n    };\r\n};\r\n","import { AddTask, DeleteTask, GenerateTasks } from '../../interfaces/Store';\r\nimport { ADD_TASK, DELETE_TASK, GENERATE_TASKS } from '../types';\r\n\r\nexport const addTask: AddTask = (task) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: task,\r\n  };\r\n};\r\n\r\nexport const deleteTask: DeleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const generateTasks: GenerateTasks = (tasks) => {\r\n  return {\r\n    type: GENERATE_TASKS,\r\n    payload: tasks,\r\n  };\r\n};\r\n","import { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { clearCurrentTask, finishTask } from '../actions/currentTaskActions';\r\nimport { addTask } from '../actions/tasksActions';\r\nimport { INACTIVATE_TIMER } from '../types';\r\nimport { State } from '../../interfaces/Store';\r\n\r\nconst getCurrentTask = (state: State) => state.currentTask;\r\n\r\nfunction* workerInactivateTimer() {\r\n  yield put(finishTask());\r\n  const payload = yield select(getCurrentTask);\r\n  yield put(addTask(payload));\r\n  yield put(clearCurrentTask());\r\n}\r\n\r\nexport function* watcherInactivateTimer() {\r\n  yield takeEvery(INACTIVATE_TIMER, workerInactivateTimer);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { watcherActivateTimer } from './activateTimerSaga';\r\nimport { watcherInactivateTimer } from './inactivateTimerSaga';\r\n\r\nexport function* rootSaga() {\r\n  yield all([watcherActivateTimer(), watcherInactivateTimer()]);\r\n}\r\n","import { LoadFromLocalStorage, SaveToLocalStorage } from '../interfaces/Utils';\r\n\r\nexport const loadFromLocalStorage: LoadFromLocalStorage = () => {\r\n  try {\r\n    const serializedStore = localStorage.getItem('state');\r\n    if (serializedStore === null) return undefined;\r\n    return JSON.parse(serializedStore);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveToLocalStorage: SaveToLocalStorage = (state) => {\r\n  try {\r\n    const serializedStore = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedStore);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootReducer } from './reducers';\r\nimport { rootSaga } from './sagas';\r\nimport {\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n} from '../utils/localStorageUtils';\r\nimport { ACTIVATE_TIMER } from './types';\r\n\r\nconst persistedState = loadFromLocalStorage();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nif (store.getState().activeTimer) {\r\n  store.dispatch({ type: ACTIVATE_TIMER, payload: '' });\r\n}\r\n","import {SetActiveTab} from \"../../interfaces/Store\";\r\nimport {SET_ACTIVE_TAB} from \"../types\";\r\n\r\nexport const setActiveTab: SetActiveTab = (tab) => {\r\n    return {\r\n        type: SET_ACTIVE_TAB,\r\n        payload: tab,\r\n    };\r\n};\r\n","import React from 'react';\r\nimport './column-wrapper.css';\r\n\r\nconst ColumnWrapper: React.FC = ({ children }) => {\r\n  return <div className=\"column-wrapper\">{children}</div>;\r\n};\r\n\r\nexport default ColumnWrapper;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setTaskName } from '../../../store/actions/currentTaskActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './mui-styles.css';\r\n\r\nconst TaskInput: React.FC = (props: any) => {\r\n  const { setTaskName, taskName } = props;\r\n\r\n  return (\r\n    <TextField\r\n      id=\"standard-basic\"\r\n      label=\"Name of your task\"\r\n      onChange={(e) => setTaskName(e.target.value)}\r\n      value={taskName}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return { taskName: state.currentTask.taskName };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setTaskName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskInput);\r\n","import React from 'react';\r\nimport './circle-wrapper.css';\r\n\r\nconst CircleWrapper: React.FC = ({ children }) => {\r\n  return <div className=\"circle-wrapper\">{children}</div>;\r\n};\r\n\r\nexport default CircleWrapper;\r\n","export const toDecimal = (number: number) => {\r\n    const strNumber = number.toString();\r\n    if (strNumber.length > 1) {\r\n        return strNumber;\r\n    } else {\r\n        return `0${strNumber}`;\r\n    }\r\n};\r\n\r\nexport const extractTime = (dateInMS: number) => {\r\n    const date = new Date(dateInMS);\r\n    const hours = toDecimal(date.getHours());\r\n    const minutes = toDecimal(date.getMinutes());\r\n    const seconds = toDecimal(date.getSeconds());\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\nexport const extractSpendTime = (timeInMS: number) => {\r\n    const hours = toDecimal(Math.floor(timeInMS / 3600000));\r\n    const minutes = toDecimal(Math.floor(timeInMS / 60000) % 60);\r\n    const seconds = toDecimal(Math.floor(timeInMS / 1000) % 60);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport CircleWrapper from '../../../UI/wrappers/CircleWrapper/CircleWrapper';\r\n// utils\r\nimport { extractSpendTime } from '../../../utils/timesManipulationUtils';\r\n\r\nconst TimerInfo: React.FC = (props: any) => {\r\n  const { timeSpend } = props;\r\n  return <CircleWrapper>{extractSpendTime(timeSpend)}</CircleWrapper>;\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return { timeSpend: state.currentTask.timeSpend };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TimerInfo);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles({\r\n  timerButton: {\r\n    color: indigo['A400'],\r\n    background: '#ffffff',\r\n    fontWeight: 400,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// MUI-components\r\nimport { Button } from '@material-ui/core';\r\n// actions\r\nimport {\r\n  activateTimer,\r\n  inactivateTimer,\r\n} from '../../../store/actions/activeTimerActions';\r\nimport { showWarning } from '../../../store/actions/emptyWarningActions';\r\n// styles\r\nimport { useStyles } from './mui-styles';\r\nimport { State } from '../../../interfaces/Store';\r\n\r\nconst TimerButton: React.FC = (props: any) => {\r\n  const classes = useStyles();\r\n  const {\r\n    activeTimer,\r\n    taskName,\r\n    activateTimer,\r\n    inactivateTimer,\r\n    showWarning,\r\n  } = props;\r\n\r\n  const inactivateListener =\r\n    taskName.trim() === '' ? showWarning : inactivateTimer;\r\n\r\n  const listener = activeTimer ? inactivateListener : activateTimer;\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      className={classes.timerButton}\r\n      onClick={() => listener()}\r\n    >\r\n      {activeTimer ? 'Stop' : 'Start'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    activeTimer: state.activeTimer,\r\n    taskName: state.currentTask.taskName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  activateTimer,\r\n  inactivateTimer,\r\n  showWarning,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimerButton);\r\n","import {ActivateTimer, InactivateTimer} from \"../../interfaces/Store\";\r\nimport {ACTIVATE_TIMER, INACTIVATE_TIMER} from \"../types\";\r\n\r\nexport const activateTimer: ActivateTimer = () => {\r\n    return {\r\n        type: ACTIVATE_TIMER,\r\n    };\r\n};\r\n\r\nexport const inactivateTimer: InactivateTimer = () => {\r\n    return {\r\n        type: INACTIVATE_TIMER,\r\n    };\r\n};\r\n","import {CloseWarning, ShowWarning} from \"../../interfaces/Store\";\r\nimport {CLOSE_WARNING, SHOW_WARNING} from \"../types\";\r\n\r\nexport const showWarning:ShowWarning = () => {\r\n    return {\r\n        type: SHOW_WARNING,\r\n    };\r\n};\r\n\r\nexport const closeWarning:CloseWarning = () => {\r\n    return {\r\n        type: CLOSE_WARNING,\r\n    };\r\n};\r\n","import React from 'react';\r\n// components\r\nimport ColumnWrapper from '../../UI/wrappers/ColumnWrapper/ColumnWrapper';\r\nimport TaskInput from './TaskInput/TaskInput';\r\nimport TimerInfo from './TimerInfo/TimerInfo';\r\nimport TimerButton from './TimerButton/TimerButton';\r\n\r\nconst Timer = () => {\r\n  return (\r\n    <ColumnWrapper>\r\n      <TaskInput />\r\n      <TimerInfo />\r\n      <TimerButton />\r\n    </ColumnWrapper>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { grey, indigo, lightBlue } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles({\r\n  table: {\r\n    maxWidth: 900,\r\n    marginBottom: '25px',\r\n  },\r\n  tableHeadCell: {\r\n    color: grey['400'],\r\n    fontWeight: 400,\r\n  },\r\n  tableRow: {\r\n    background: lightBlue['50'],\r\n  },\r\n  tableCell: {\r\n    color: indigo['A400'],\r\n  },\r\n  tableButton: {\r\n    color: indigo['A400'],\r\n    background: '#ffffff',\r\n    fontWeight: 400,\r\n  },\r\n});\r\n","import { extractSpendTime, extractTime } from './timesManipulationUtils';\r\nimport { Tasks} from \"../interfaces/Store\";\r\nimport {TaskForTable} from \"../interfaces/Utils\";\r\n\r\nexport const transformTasksForTable = (tasks: Tasks) => {\r\n  return tasks.map((task, index: number) => {\r\n    return {\r\n      number: index + 1,\r\n      ...task,\r\n      timeStart: extractTime(task.timeStart),\r\n      timeEnd: extractTime(task.timeEnd),\r\n      timeSpend: extractSpendTime(task.timeSpend),\r\n    };\r\n  });\r\n};\r\n\r\nexport const toSentenceText = (camelCase: string) => {\r\n  const result = camelCase.replace(/([A-Z])/g, ' $1');\r\n  const capitalLetters = result.charAt(0).toUpperCase() + result.slice(1);\r\n\r\n  return capitalLetters;\r\n};\r\n\r\nexport const toPageInfo = (task: TaskForTable) => {\r\n  const { taskName, timeStart, timeEnd, timeSpend } = task;\r\n\r\n  return {\r\n    taskName,\r\n    timeSpend,\r\n    timeStart,\r\n    timeEnd,\r\n  };\r\n};\r\n\r\nexport const extractTimeChart = (tasks: Tasks) => {\r\n  const timesChartData = [\r\n    { name: '0', spendMinutes: 0 },\r\n    { name: '1', spendMinutes: 0 },\r\n    { name: '2', spendMinutes: 0 },\r\n    { name: '3', spendMinutes: 0 },\r\n    { name: '4', spendMinutes: 0 },\r\n    { name: '5', spendMinutes: 0 },\r\n    { name: '6', spendMinutes: 0 },\r\n    { name: '7', spendMinutes: 0 },\r\n    { name: '8', spendMinutes: 0 },\r\n    { name: '9', spendMinutes: 0 },\r\n    { name: '10', spendMinutes: 0 },\r\n    { name: '11', spendMinutes: 0 },\r\n    { name: '12', spendMinutes: 0 },\r\n    { name: '13', spendMinutes: 0 },\r\n    { name: '14', spendMinutes: 0 },\r\n    { name: '15', spendMinutes: 0 },\r\n    { name: '16', spendMinutes: 0 },\r\n    { name: '17', spendMinutes: 0 },\r\n    { name: '18', spendMinutes: 0 },\r\n    { name: '19', spendMinutes: 0 },\r\n    { name: '20', spendMinutes: 0 },\r\n    { name: '21', spendMinutes: 0 },\r\n    { name: '22', spendMinutes: 0 },\r\n    { name: '23', spendMinutes: 0 },\r\n  ];\r\n\r\n  tasks.forEach((task) => {\r\n    const { timeStart, timeEnd, timeSpend } = task;\r\n    const taskHourStart = new Date(timeStart).getHours();\r\n    const taskMinutesStart = new Date(timeStart).getMinutes();\r\n    const taskHourEnd = new Date(timeEnd).getHours();\r\n    const taskMinutesEnd = new Date(timeEnd).getMinutes();\r\n\r\n    if (taskHourStart === taskHourEnd) {\r\n      timesChartData.forEach((item) => {\r\n        const { name, spendMinutes } = item;\r\n\r\n        if (taskHourStart === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: spendMinutes + Math.floor(timeSpend / 1000 / 60),\r\n          };\r\n        }\r\n      });\r\n    }\r\n\r\n    if (taskHourEnd - taskHourStart === 1) {\r\n      timesChartData.forEach((item) => {\r\n        const { name, spendMinutes } = item;\r\n\r\n        if (taskHourStart === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: spendMinutes + (60 - taskMinutesStart),\r\n          };\r\n        }\r\n\r\n        if (taskHourEnd === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: spendMinutes + taskMinutesEnd,\r\n          };\r\n        }\r\n      });\r\n    }\r\n\r\n    if (taskHourEnd - taskHourStart === 2) {\r\n      timesChartData.forEach((item) => {\r\n        const { name, spendMinutes } = item;\r\n\r\n        if (taskHourStart === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: spendMinutes + (60 - taskMinutesStart),\r\n          };\r\n        }\r\n\r\n        if (taskHourStart + 1 === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: 60,\r\n          };\r\n        }\r\n\r\n        if (taskHourEnd === +name) {\r\n          timesChartData[+name] = {\r\n            name,\r\n            spendMinutes: spendMinutes + taskMinutesEnd,\r\n          };\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return timesChartData;\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// M-UI components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport { useStyles } from '../styles';\r\n// actions\r\nimport { deleteTask } from '../../../store/actions/tasksActions';\r\n// utils\r\nimport { transformTasksForTable } from '../../../utils/taskManipulationUtils';\r\n// interfaces\r\nimport { State } from '../../../interfaces/Store';\r\n\r\nconst tableHead = [\r\n  { id: 1, label: '#' },\r\n  { id: 2, label: 'Task' },\r\n  { id: 3, label: 'Time start' },\r\n  { id: 4, label: 'Time end' },\r\n  { id: 5, label: 'Time spend' },\r\n  { id: 6, label: 'Info' },\r\n  { id: 7, label: 'Delete' },\r\n];\r\n\r\nconst FilledTable: React.FC = (props: any) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n\r\n  const tasks = useSelector((state: State) => state.tasks);\r\n  const dispatch = useDispatch();\r\n\r\n  const filledTable = transformTasksForTable(tasks).map((task) => {\r\n    const { id, number } = task;\r\n\r\n    return (\r\n      <TableRow className={classes.tableRow} key={id}>\r\n        {Object.keys(task)\r\n          .filter((item) => item !== 'id')\r\n          .map((item, index) => {\r\n            return (\r\n              <TableCell\r\n                key={id + index}\r\n                align=\"center\"\r\n                className={classes.tableCell}\r\n              >\r\n                {\r\n                  // @ts-ignore\r\n                  task[item]\r\n                }\r\n              </TableCell>\r\n            );\r\n          })}\r\n\r\n        <TableCell align=\"center\" className={classes.tableCell}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.tableButton}\r\n            onClick={() => {\r\n              history.push(`/task/${number}`);\r\n            }}\r\n          >\r\n            Info\r\n          </Button>\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.tableButton}\r\n            onClick={() => dispatch(deleteTask(id))}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer className={classes.table}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {tableHead.map((item) => {\r\n              const { id, label } = item;\r\n\r\n              return (\r\n                <TableCell\r\n                  align=\"center\"\r\n                  key={id}\r\n                  className={classes.tableHeadCell}\r\n                >\r\n                  {label}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{filledTable}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(FilledTable);\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n    message: {\r\n        marginTop: '10px',\r\n        maxWidth: 900,\r\n        color: indigo['A400'],\r\n        textAlign: 'center',\r\n    },\r\n});\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useStyles } from './mui-styles';\r\n\r\nconst EmptyTable = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" className={classes.message}>\r\n        No recent entries to show\r\n      </Typography>\r\n      <Typography variant=\"h6\" className={classes.message}>\r\n        It's been a long time since you've tracked your tasks!\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmptyTable;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// components\r\nimport FilledTable from './FilledTable/FilledTable';\r\nimport EmptyTable from './EmptyTable/EmptyTable';\r\n// interfaces\r\nimport { State } from '../../interfaces/Store';\r\n\r\nconst TimerTable: React.FC = () => {\r\n  const tasks = useSelector((state: State) => state.tasks);\r\n\r\n  return <>{tasks.length === 0 ? <EmptyTable /> : <FilledTable />}</>;\r\n};\r\n\r\nexport default TimerTable;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPanel;\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {cyan} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n    tabs: {\r\n        backgroundColor: cyan['500'],\r\n        width: '900px',\r\n    },\r\n});\r\n","import {MuiTabProps} from \"../interfaces/Utils\";\r\n\r\nexport const muiTabProps: MuiTabProps = (index) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles({\r\n  generateButton: {\r\n    color: indigo['A400'],\r\n    background: '#ffffff',\r\n    fontWeight: 400,\r\n  },\r\n});\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { GenerateRandomTasks, GetRandomNumber } from '../interfaces/Utils';\r\n\r\nexport const getRandomNumber: GetRandomNumber = (min, max) => {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n};\r\n\r\nexport const generateRandomTasks: GenerateRandomTasks = () => {\r\n  const randomNumbers = getRandomNumber(10, 15);\r\n\r\n  const todayInMS = Date.now();\r\n  const todayDate = new Date(todayInMS);\r\n\r\n  let timeStart;\r\n  let timeEnd = new Date(\r\n    todayDate.getFullYear(),\r\n    todayDate.getMonth(),\r\n    todayDate.getDate(),\r\n    8,\r\n    0,\r\n    0\r\n  ).getTime();\r\n  let id;\r\n\r\n  return Array.from({ length: randomNumbers }, () => {\r\n    timeStart = timeEnd + getRandomNumber(300000, 900000);\r\n    timeEnd = timeStart + getRandomNumber(600000, 5400000);\r\n    id = uuidv4();\r\n\r\n    return {\r\n      id,\r\n      taskName: `Task ${id.substr(0, 8)}`,\r\n      timeStart,\r\n      timeEnd,\r\n      timeSpend: timeEnd - timeStart,\r\n    };\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\n// actions\r\nimport { generateTasks } from '../../../store/actions/tasksActions';\r\n// styles\r\nimport { useStyles } from './mui-styles';\r\n// utils\r\nimport { generateRandomTasks } from '../../../utils/generateTaskUtils';\r\n\r\nconst GenerateTaskButton = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const randomTasks = generateRandomTasks();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      className={classes.generateButton}\r\n      onClick={() => {\r\n        dispatch(generateTasks(randomTasks));\r\n      }}\r\n    >\r\n      Generate\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default GenerateTaskButton;\r\n","import React from 'react';\r\nimport './generate-task-button-wrapper.css';\r\n\r\nconst GenerateTaskButtonWrapper: React.FC = ({ children }) => {\r\n  return <div className=\"button-wrapper\">{children}</div>;\r\n};\r\n\r\nexport default GenerateTaskButtonWrapper;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport { State } from '../../interfaces/Store';\r\n// components\r\nimport GenerateTaskButton from './GenerateTaskButton/GenerateTaskButton';\r\nimport GenerateTaskButtonWrapper from '../../UI/wrappers/GenerateTaskButtonWrapper/GenerateTaskButtonWrapper';\r\n// utils\r\nimport { extractTimeChart } from '../../utils/taskManipulationUtils';\r\n\r\nconst TasksChart = (props: any) => {\r\n  const { tasks } = props;\r\n\r\n  const tasksToChart = extractTimeChart(tasks);\r\n\r\n  return (\r\n    <>\r\n      <BarChart\r\n        width={900}\r\n        height={230}\r\n        data={tasksToChart}\r\n        margin={{\r\n          top: 25,\r\n          right: 10,\r\n          left: 10,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis domain={[0, 60]} />\r\n        <Tooltip\r\n            labelFormatter={(name) => 'The Current Hour: ' + name}\r\n        />\r\n        <Legend />\r\n        <Bar\r\n          dataKey=\"spendMinutes\"\r\n          name=\"Minutes in this hour\"\r\n          fill=\"#3d5afe\"\r\n        />\r\n      </BarChart>\r\n      <GenerateTaskButtonWrapper>\r\n        <GenerateTaskButton />\r\n      </GenerateTaskButtonWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return { tasks: state.tasks };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TasksChart);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// MUI-components\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n// components\r\nimport TimerTable from '../Table/Table';\r\nimport TabPanel from './TabPanel/TabPanel';\r\n// styles\r\nimport { useStyles } from './styles';\r\n// utils\r\nimport { muiTabProps } from '../../utils/muiUtils';\r\n// actions\r\nimport { setActiveTab } from '../../store/actions/tabsActions';\r\nimport TasksChart from '../TasksChart/TasksChart';\r\n\r\nconst TimerTabs: React.FC = (props: any) => {\r\n  const classes = useStyles();\r\n  const { activeTab, setActiveTab, history } = props;\r\n\r\n  const handleSetTab = (event: any, value: any) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          className={classes.tabs}\r\n          value={activeTab}\r\n          onChange={handleSetTab}\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab\r\n            label=\"TABLE LOG\"\r\n            fullWidth={true}\r\n            value=\"TABLE_LOG\"\r\n            {...muiTabProps('TABLE_LOG')}\r\n            onClick={() => {\r\n              history.push('/');\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"TASKS CHART\"\r\n            fullWidth={true}\r\n            value=\"TASKS_CHART\"\r\n            {...muiTabProps('TASKS_CHART')}\r\n            onClick={() => {\r\n              history.push('/tasks_chart');\r\n            }}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={activeTab} index=\"TABLE_LOG\">\r\n        <TimerTable />\r\n      </TabPanel>\r\n      <TabPanel value={activeTab} index=\"TASKS_CHART\">\r\n        <TasksChart />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return { activeTab: state.activeTab };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setActiveTab,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(TimerTabs)\r\n);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport { cyan } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles({\r\n  dialogTitle: {\r\n    color: pink['A400'],\r\n  },\r\n  button: {\r\n    color: cyan['500'],\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// actions\r\nimport { closeWarning } from '../../store/actions/emptyWarningActions';\r\n// types\r\nimport { State } from '../../interfaces/Store';\r\n// MUI-components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// styles\r\nimport { useStyles } from './mui-styles';\r\n\r\nconst EmptyTaskWarning = (props: any) => {\r\n  const classes = useStyles();\r\n  const { emptyTask, closeWarning } = props;\r\n\r\n  return (\r\n    <Dialog open={emptyTask} onClose={closeWarning} aria-labelledby=\"dialog-title\">\r\n      <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\r\n        Empty task name\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You are trying close your task without name, enter the title and try\r\n          again!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeWarning} className={classes.button}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return { emptyTask: state.emptyTask };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  closeWarning,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmptyTaskWarning);\r\n","import React from 'react';\r\n// components\r\nimport ColumnWrapper from '../../UI/wrappers/ColumnWrapper/ColumnWrapper';\r\nimport Timer from '../../components/Timer/Timer';\r\nimport TimerTabs from '../../components/Tabs/Tabs';\r\nimport EmptyTaskWarning from '../../components/EmptyTaskWarning/EmptyTaskWarning';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <ColumnWrapper>\r\n      <Timer />\r\n      <TimerTabs />\r\n      <EmptyTaskWarning />\r\n    </ColumnWrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles({\r\n  card: {\r\n    marginTop: '5px',\r\n    minWidth: '320px',\r\n    color: indigo['A400'],\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    color: indigo['A400'],\r\n    borderColor: indigo['A400'],\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport ColumnWrapper from '../../UI/wrappers/ColumnWrapper/ColumnWrapper';\r\n// MUI-components\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useStyles } from '../TaskPage/mui-styles';\r\n\r\nconst NotFoundPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ColumnWrapper>\r\n      <h2>404</h2>\r\n      <h3>Oops ... we can't find this page</h3>\r\n      <Link to=\"/\">\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          className={classes.button}\r\n          endIcon={<ArrowForwardIcon />}\r\n        >\r\n          To Main Page\r\n        </Button>\r\n      </Link>\r\n    </ColumnWrapper>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport ColumnWrapper from '../../UI/wrappers/ColumnWrapper/ColumnWrapper';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n// MUI-components\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n// utils\r\nimport {\r\n  toPageInfo,\r\n  toSentenceText,\r\n  transformTasksForTable,\r\n} from '../../utils/taskManipulationUtils';\r\n// styles\r\nimport { useStyles } from './mui-styles';\r\n// interfaces\r\nimport { State } from '../../interfaces/Store';\r\n\r\nconst TaskPage = (props: any) => {\r\n  const classes = useStyles();\r\n  const { number } = props;\r\n  const tasks = useSelector((state: State) => state.tasks);\r\n\r\n  const pageTask = transformTasksForTable(tasks).find(\r\n    (item) => item.number === +number\r\n  );\r\n\r\n  if (!pageTask) {\r\n    return <NotFoundPage />;\r\n  }\r\n\r\n  return (\r\n    <ColumnWrapper>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <CardContent>\r\n          <h1>Task Info:</h1>\r\n\r\n          <List>\r\n            {Object.keys(toPageInfo(pageTask)).map((field, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary={toSentenceText(field)}\r\n                      // @ts-ignore\r\n                      secondary={pageTask[field]}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Link to=\"/\">\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={classes.button}\r\n              endIcon={<ArrowForwardIcon />}\r\n            >\r\n              To Main Page\r\n            </Button>\r\n          </Link>\r\n        </CardActions>\r\n      </Card>\r\n    </ColumnWrapper>\r\n  );\r\n};\r\n\r\nexport default TaskPage;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// redux\r\nimport { store } from './store';\r\nimport { setActiveTab } from './store/actions/tabsActions';\r\n// components\r\nimport Main from './pages/Main/Main';\r\nimport TaskPage from './pages/TaskPage/TaskPage';\r\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route\r\n        exact\r\n        path=\"/tasks_chart\"\r\n        render={() => {\r\n          store.dispatch(setActiveTab('TASKS_CHART'));\r\n\r\n          return <Main />;\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/task/:number\"\r\n        render={({ match }) => {\r\n          const { number } = match.params;\r\n\r\n          return <TaskPage number={number} />;\r\n        }}\r\n      />\r\n\r\n      <Route render={() => <NotFoundPage />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}